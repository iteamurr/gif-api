name: Gif API CI configuration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - id: cache-dependencies
      name: Cache dependencies
      uses: actions/cache@v2.1.7
      with:
        path: ${{ github.workspace }}/.venv
        key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-
    - name: Install dependencies
      if: steps.cache-dependencies.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install -U pip poetry
        poetry config virtualenvs.in-project true
        poetry install --no-interaction --without dev
    - name: Lint with pylint
      run: |
        poetry run pylint --fail-under=9 gif_api

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - id: cache-dependencies
        name: Cache dependencies
        uses: actions/cache@v2.1.7
        with:
          path: ${{ github.workspace }}/.venv
          key: ${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-dependencies.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U pip poetry
          poetry config virtualenvs.in-project true
          poetry install --no-interaction --without dev
      - name: Test with pytest
        run: |
          poetry run pytest -v --cov=gif_api --cov-report=term-missing --cov-fail-under=80 tests/
        env:
          POSTGRES_DB: gif_api_test_db
          POSTGRES_USER: gif_api_test_db_agent
          POSTGRES_PASSWORD: hackme
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
